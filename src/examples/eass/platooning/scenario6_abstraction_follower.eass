:abstraction: follower

:Initial Beliefs:
	
init_max_dist(20) // maximum initial distance to switch to steering control
set_up_time(60)
time_to_join_in_middle(100)
time_to_leave_from_middle(200)

:Initial Goals:

:Plans:
	
	/* Default plans for handling messages */
	+.received(:tell, B): {True} <- +B;   
	+.received(:perform, G): {True} <- +!G [perform];
	+.received(:achieve, G): {True} <- +!G [achieve];

+id(X,Y): {True}<- assert_shared(name(X)), assert_shared(id(Y));

+timeStamp(X): {~B id(3), B set_up_time(Y), Y <X}<- assert_shared(platoon_set_up);

+timeStamp(X): {B id(3), B time_to_join_in_middle(Y), Y < X}<- assert_shared(ready_to_join); 

+timeStamp(X): {B id(3), B time_to_leave_from_middle(Y), Y < X}<- assert_shared(ready_to_leave); 

+distance(X): {B spacing(Y), Y-1 < X, X < Y+1}<- assert_shared(joining_spacing);

+distance(X): {B lane_1, B ready_to_join, B initial_distance, B init_max_dist(Y), Y < X }<- remove_shared(initial_distance); // if vehicle's distance is less than maximum initial distance, we add "initial_distance" belief

+distance(X): {B lane_1, B ready_to_join, ~B initial_distance, B init_max_dist(Y), X < Y }<- assert_shared(initial_distance); // if vehicle's distance is greater than maximum initial distance, we remove "initial_distance" belief

+lateral(X): {B changing_lane, B id(3), X < 1} <- assert_shared(lane_1);  

+!join_ok(X) [perform]: {B id(X)}<- run(pred(join_ok),args(0)), print(run_join_ok), assert_shared(changing_lane);

+!speed_controller(X) [perform]: {True}<- run(pred(speed_controller),args(X)), print(speedControllerEnabled);

+!steering_controller(X)[perform]: {True}<- run(pred(steering_controller), args(X)), print(steeringControllerEnabled);

+!set_spacing(Y) [perform]: {True}<- run(pred(set_spacing),args(Y)), assert_shared(spacing(Y));
