
:name: leader

:Initial Beliefs:

req(1) // i.e., request to join
req(0) // request to leave
req(2) // joined successfully
allowed_spot(follower1) // where in the platoon a vehicle is allowed to get in

:Reasoning Rules:
last_vehicle(Y):- platoon_m(X,Y), ~platoon_m(Y,Z);
no_platoon_m(X):- ~platoon_m(X, Y), ~platoon_m(Z, X); 

:Initial Goals:

:Plans:

/* Default plans for handling messages */
+.received(:tell, B): {True} <- +B;   
+.received(:perform, G): {True} <- +!G [perform];
+.received(:achieve, G): {True} <- +!G [achieve];

//=================================== leader receives a joining request, the requested spot is allowed ================
+message(SENDER, REQ, FRONT): {B no_platoon_m(SENDER), ~B request_to_join(SENDER), B req(1), 1 == REQ, B allowed_spot(FRONT)} <- 
						+!platoon_m(SENDER, FRONT) [achieve],
						print(leader_vehicle_in_the_middle_successfuly_joined); 

//=================================== leader receives a joining request, the requested spot is not allowed ================
+message(SENDER, REQ, FRONT): {B no_platoon_m(SENDER), ~B request_to_join(SENDER), B req(1), 1 == REQ, ~B allowed_spot(FRONT)} <- 
						print(leader_joining_in_requested_spot_is_not_allowed); 

// ==== for trouble shooting ======
+message(SENDER, REQ, FRONT): {~B no_platoon_m(SENDER), B req(1), 1 == REQ} <- 
						print(something_is_wrong_sender_already_in_platoon);

// ============== SENDER request to join to platoon and leader sets a goal to have SENDER in platoon =================
+!platoon_m(SENDER, FRONT) [achieve]: {~B set_spacing_from(FRONT)}<-
						.send(FRONT, :achieve, set_spacing(17)), *set_spacing_from(FRONT);
						
+!platoon_m(SENDER, FRONT) [achieve]: {B set_spacing_from(FRONT), ~B message(SENDER, 2)}<-
						.send(SENDER, :tell, join_agreement(SENDER, FRONT)), *message(SENDER, 2);

+!platoon_m(SENDER, FRONT) [achieve]: {B message(SENDER, REQ), B req(2), 2== REQ, B platoon_m(X, FRONT)}<- 
																.send(SENDER,:tell, platoon_m), 
																.send(FRONT, :achieve, set_spacing(6)),
																-platoon_m(X,FRONT), +platoon_m(X, SENDER), +platoon_m(SENDER, FRONT);
								