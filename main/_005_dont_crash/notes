// Make any journey
//+!complete_journey (JX,JY) [achieve] : {B min(MIN_X, MIN_Y), JX < MIN_X}  <- -!complete_journey (JX,JY) [achieve]; //print("cant reach destination MIN X"),
//+!complete_journey (JX,JY) [achieve] : {B min(MIN_X, MIN_Y), JY < MIN_Y}  <- -!complete_journey (JX,JY) [achieve]; //print("cant reach destination MIN Y"), 
					
//+!complete_journey (JX,JY) [achieve] : {B max(MAX_X, MAX_Y), MAX_X < JX}  <- -!complete_journey (JX,JY) [achieve]; //print("cant reach destination MAX X"), 
//+!complete_journey (JX,JY) [achieve] : {B max(MAX_X, MAX_Y), MAX_Y < JY}  <- -!complete_journey (JX,JY) [achieve]; //print("cant reach destination MAX Y"), 
	
	
	
	+!verify_reach_destination (V_X,V_Y) [perform] : {B min(MIN_X, MIN_Y), V_X < MIN_X}  <- +impossible_journey_to(V_X,V_Y);	//print("cant reach destination MIN X")
+!verify_reach_destination (V_X,V_Y) [perform] : {B min(MIN_X, MIN_Y), V_Y < MIN_Y}  <- +impossible_journey_to(V_X,V_Y);	//print("cant reach destination MIN Y") 
+!verify_reach_destination (V_X,V_Y) [perform] : {B max(MAX_X, MAX_Y), MAX_X < V_X}  <- +impossible_journey_to(V_X,V_Y);	//print("cant reach destination MAX X") 
+!verify_reach_destination (V_X,V_Y) [perform] : {B max(MAX_X, MAX_Y), MAX_Y < V_Y}  <- +impossible_journey_to(V_X,V_Y);	//print("cant reach destination MAX Y") 
	
	
	+!finish_all_rides [achieve] : {B ride_info, ~B try_pick_up(X,Y), B pick_up(X,Y), ~B passenger}
								<- +!complete_journey (X,Y) [achieve], +try_pick_up(X,Y);	

+!finish_all_rides [achieve] : {B ride_info, B try_pick_up(X,Y), B at(X,Y), B pick_up(X,Y), ~B passenger}
								<- park(pick_up), +passenger, -pick_up(X,Y), -try_pick_up(X,Y);	

+!finish_all_rides [achieve] : {B ride_info, B try_pick_up(X,Y), B at(AT_X, AT_Y), B pick_up(X,Y), ~B passenger}
								<- refuse_ride(pick_up), -pick_up(X,Y), -try_pick_up(X,Y), -ride_info;	
								
								
// Current ride - Drop off		
+!finish_all_rides [achieve] : {B ride_info, ~B try_drop_off(X,Y), B drop_off(X,Y), B passenger}
								<- 	+!complete_journey (X,Y) [achieve], +try_drop_off(X,Y);
								
+!finish_all_rides [achieve] : {B ride_info, B try_drop_off(X,Y), B at(X,Y), B drop_off(X,Y), B passenger}
								<- 	park(drop_off), -passenger, -drop_off(X,Y), -try_drop_off(X,Y), -ride_info;

+!finish_all_rides [achieve] : {B ride_info, B try_drop_off(X,Y), B at(AT_X,AT_Y), B drop_off(X,Y), B passenger}
								<- 	refuse_ride(drop_off), park(drop_off), -passenger, -drop_off(X,Y), -try_drop_off(X,Y), -ride_info;	
								
								
								
// If car needs to turn
+!drive_to(X,Y) [achieve] : {B direction(north), B heading(north), B at(AT_X, Y)}  <- print(turnnorth), -direction(north), -heading(north);
+!drive_to(X,Y) [achieve] : {B direction(south), B heading(south), B at(AT_X, Y)}  <- print(turnsouth), -direction(south), -heading(south);
+!drive_to(X,Y) [achieve] : {B direction(east),  B heading(east),  B at(X, AT_Y)}  <- -direction(east), -heading(east);
+!drive_to(X,Y) [achieve] : {B direction(west),  B heading(west),  B at(X, AT_Y)}  <- -direction(west), -heading(west);



+!avoid_obstacle(north, X, Y) [achieve] : {~B obstacle(west, X, Y)} <- drive(west, X, Y), +direction(west), -moving;
+!avoid_obstacle(north, X, Y) [achieve] : {~B obstacle(east, X, Y)} <- drive(east, X, Y), +direction(west), -moving;

+!avoid_obstacle(south, X, Y) [achieve] : {~B obstacle(east, X, Y)} <- drive(east, X, Y), -moving;
+!avoid_obstacle(south, X, Y) [achieve] : {~B obstacle(west, X, Y)} <- drive(west, X, Y), -moving;

+!avoid_obstacle(east, X, Y) [achieve] : {~B obstacle(north, X, Y)} <- drive(north, X, Y), -moving;
+!avoid_obstacle(east, X, Y) [achieve] : {~B obstacle(south, X, Y)} <- drive(south, X, Y), -moving;

+!avoid_obstacle(west, X, Y) [achieve] : {~B obstacle(north, X, Y)} <- drive(north, X, Y), -moving;
+!avoid_obstacle(west, X, Y) [achieve] : {~B obstacle(south, X, Y)} <- drive(south, X, Y), -moving;


+!avoid_obstacle(north, X, Y) [achieve] : {~B obstacle(south, X, Y)} <- drive(south, X, Y), *at(AT_X, AT_Y), +obstacle(north, AT_X, AT_Y);
+!avoid_obstacle(south, X, Y) [achieve] : {~B obstacle(north, X, Y)} <- drive(north, X, Y), *at(AT_X, AT_Y), +obstacle(south, AT_X, AT_Y);

+!avoid_obstacle(east, X, Y) [achieve] : {~B obstacle(west, X, Y)} <- drive(west, X, Y), *at(AT_X, AT_Y), +obstacle(east, AT_X, AT_Y);
+!avoid_obstacle(west, X, Y) [achieve] : {~B obstacle(east, X, Y)} <- drive(east, X, Y), *at(AT_X, AT_Y), +obstacle(west, AT_X, AT_Y);